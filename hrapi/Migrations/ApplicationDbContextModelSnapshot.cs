// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using hrapi.Database;

namespace hrapi.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("hrapi.Model.Catagories", b =>
                {
                    b.Property<int>("CatagoriesID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Desciption")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("CatagoriesID");

                    b.ToTable("Catagories");
                });

            modelBuilder.Entity("hrapi.Model.Comments", b =>
                {
                    b.Property<int>("CommentsID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateTimeCreate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ToDoListsID")
                        .HasColumnType("int");

                    b.Property<string>("UserCreateName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CommentsID");

                    b.HasIndex("ToDoListsID");

                    b.ToTable("comments");
                });

            modelBuilder.Entity("hrapi.Model.Companys", b =>
                {
                    b.Property<int>("CompanyID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Logo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("States")
                        .HasColumnType("bit");

                    b.HasKey("CompanyID");

                    b.ToTable("companys");
                });

            modelBuilder.Entity("hrapi.Model.Departments", b =>
                {
                    b.Property<int>("DepartmentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CompanyID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<string>("DepartmentDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DepartmentName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsRootDepartment")
                        .HasColumnType("bit");

                    b.Property<int?>("ParentDepartmentID")
                        .HasColumnType("int");

                    b.Property<string>("UserCreated")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DepartmentID");

                    b.HasIndex("CompanyID");

                    b.ToTable("departments");
                });

            modelBuilder.Entity("hrapi.Model.EnventsStaff", b =>
                {
                    b.Property<int>("StaffEventID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("EventID")
                        .HasColumnType("int");

                    b.Property<int>("StaffID")
                        .HasColumnType("int");

                    b.Property<int>("status")
                        .HasColumnType("int");

                    b.HasKey("StaffEventID");

                    b.HasIndex("EventID");

                    b.HasIndex("StaffID");

                    b.ToTable("enventsStaff");
                });

            modelBuilder.Entity("hrapi.Model.EventCatagories", b =>
                {
                    b.Property<int>("EventCatagoriesID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CatagoriesID")
                        .HasColumnType("int");

                    b.Property<int?>("EventID")
                        .HasColumnType("int");

                    b.Property<int?>("EventsEventID")
                        .HasColumnType("int");

                    b.HasKey("EventCatagoriesID");

                    b.HasIndex("CatagoriesID");

                    b.HasIndex("EventsEventID");

                    b.ToTable("eventCatagories");
                });

            modelBuilder.Entity("hrapi.Model.Events", b =>
                {
                    b.Property<int>("EventID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CompanyID")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StatusID")
                        .HasColumnType("int");

                    b.Property<DateTime>("TimeEnd")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("TimeStart")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserHostID")
                        .HasColumnType("int");

                    b.HasKey("EventID");

                    b.ToTable("events");
                });

            modelBuilder.Entity("hrapi.Model.News", b =>
                {
                    b.Property<int>("NewsID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CategoryNewsID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsSeen")
                        .HasColumnType("bit");

                    b.Property<int?>("StaffID")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserCreated")
                        .HasColumnType("int");

                    b.Property<string>("UserCreatedName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("NewsID");

                    b.HasIndex("CategoryNewsID");

                    b.HasIndex("StaffID");

                    b.ToTable("news");
                });

            modelBuilder.Entity("hrapi.Model.NewsCategory", b =>
                {
                    b.Property<int>("CategoryNewsID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CategoryNewsDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CategoryNewsTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CompanyID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<int>("StatusID")
                        .HasColumnType("int");

                    b.Property<string>("UserCreated")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CategoryNewsID");

                    b.HasIndex("CompanyID");

                    b.ToTable("newsCategories");
                });

            modelBuilder.Entity("hrapi.Model.Positions", b =>
                {
                    b.Property<int>("PositionID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CompanyID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<string>("PositionDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PositionName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserCreated")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PositionID");

                    b.HasIndex("CompanyID");

                    b.ToTable("positions");
                });

            modelBuilder.Entity("hrapi.Model.Staffs", b =>
                {
                    b.Property<int>("StaffID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Avatar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CompanyID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateOut")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DepartmentsID")
                        .HasColumnType("int");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastLogin")
                        .HasColumnType("datetime2");

                    b.Property<string>("Passwords")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PositionsID")
                        .HasColumnType("int");

                    b.Property<string>("StaffCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StatusID")
                        .HasColumnType("int");

                    b.Property<string>("Token")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StaffID");

                    b.HasIndex("CompanyID");

                    b.HasIndex("DepartmentsID");

                    b.HasIndex("PositionsID");

                    b.ToTable("staffs");
                });

            modelBuilder.Entity("hrapi.Model.States", b =>
                {
                    b.Property<int>("StatesID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("StateName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StatesID");

                    b.ToTable("states");
                });

            modelBuilder.Entity("hrapi.Model.ToDoLists", b =>
                {
                    b.Property<int>("ToDoListID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DepartmentsID")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsComplete")
                        .HasColumnType("bit");

                    b.Property<int>("Priority")
                        .HasColumnType("int");

                    b.Property<int>("StaffAssignedID")
                        .HasColumnType("int");

                    b.Property<int>("StatusID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("TimeEnd")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("TimeStart")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserCreatedID")
                        .HasColumnType("int");

                    b.HasKey("ToDoListID");

                    b.HasIndex("DepartmentsID");

                    b.ToTable("toDoLists");
                });

            modelBuilder.Entity("hrapi.Model.Comments", b =>
                {
                    b.HasOne("hrapi.Model.ToDoLists", "ToDoLists")
                        .WithMany()
                        .HasForeignKey("ToDoListsID");
                });

            modelBuilder.Entity("hrapi.Model.Departments", b =>
                {
                    b.HasOne("hrapi.Model.Companys", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyID");
                });

            modelBuilder.Entity("hrapi.Model.EnventsStaff", b =>
                {
                    b.HasOne("hrapi.Model.Events", "Event")
                        .WithMany()
                        .HasForeignKey("EventID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("hrapi.Model.Staffs", "Staff")
                        .WithMany()
                        .HasForeignKey("StaffID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("hrapi.Model.EventCatagories", b =>
                {
                    b.HasOne("hrapi.Model.Catagories", "Catagory")
                        .WithMany()
                        .HasForeignKey("CatagoriesID");

                    b.HasOne("hrapi.Model.Events", "Events")
                        .WithMany()
                        .HasForeignKey("EventsEventID");
                });

            modelBuilder.Entity("hrapi.Model.News", b =>
                {
                    b.HasOne("hrapi.Model.NewsCategory", "CategoryNews")
                        .WithMany()
                        .HasForeignKey("CategoryNewsID");

                    b.HasOne("hrapi.Model.Staffs", "Staff")
                        .WithMany()
                        .HasForeignKey("StaffID");
                });

            modelBuilder.Entity("hrapi.Model.NewsCategory", b =>
                {
                    b.HasOne("hrapi.Model.Companys", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyID");
                });

            modelBuilder.Entity("hrapi.Model.Positions", b =>
                {
                    b.HasOne("hrapi.Model.Companys", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyID");
                });

            modelBuilder.Entity("hrapi.Model.Staffs", b =>
                {
                    b.HasOne("hrapi.Model.Companys", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyID");

                    b.HasOne("hrapi.Model.Departments", "Departments")
                        .WithMany()
                        .HasForeignKey("DepartmentsID");

                    b.HasOne("hrapi.Model.Positions", "Positions")
                        .WithMany()
                        .HasForeignKey("PositionsID");
                });

            modelBuilder.Entity("hrapi.Model.ToDoLists", b =>
                {
                    b.HasOne("hrapi.Model.Departments", "Departments")
                        .WithMany()
                        .HasForeignKey("DepartmentsID");
                });
#pragma warning restore 612, 618
        }
    }
}
